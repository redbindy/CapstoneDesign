@page
@model Capstone.Pages.InfraStructure
@{
}

<script src="libs/htmlwidgets-1.6.4/htmlwidgets.js"></script>
<script src="libs/rglWebGL-binding-1.3.1/rglWebGL.js"></script>
<link href="libs/rglwidgetClass-1.3.1/rgl.css" rel="stylesheet" />
<script src="libs/rglwidgetClass-1.3.1/rglClass.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/utils.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/buffer.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/subscenes.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/shaders.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/shadersrc.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/textures.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/projection.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/mouse.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/init.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/pieces.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/draw.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/controls.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/selection.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/rglTimer.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/pretty.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/axes.src.js"></script>
<script src="libs/rglwidgetClass-1.3.1/animation.src.js"></script>
<script src="libs/CanvasMatrix4-1.3.1/CanvasMatrix.src.js"></script>

<div id="htmlwidget_container">
    <p id="rgl68864-aria" hidden>3D plot</p>
    <div id="rgl68864" style="width:520px;height:520px;" class="rglWebGL html-widget" role="img" aria-labelledby="rgl68864-aria"></div>
</div>
<script type="application/json" data-for="rgl68864">{"x":{"material":{"color":"#000000","alpha":1,"lit":true,"ambient":"#000000","specular":"#FFFFFF","emission":"#000000","shininess":50,"smooth":true,"front":"filled","back":"filled","size":3,"lwd":1,"fog":true,"point_antialias":false,"line_antialias":false,"texture":null,"textype":"rgb","texmode":"modulate","texmipmap":false,"texminfilter":"linear","texmagfilter":"linear","texenvmap":false,"depth_mask":true,"depth_test":"less","isTransparent":false,"polygon_offset":[0,0],"margin":"","floating":false,"tag":"","blend":["src_alpha","one_minus_src_alpha"]},"rootSubscene":41,"objects":{"58":{"id":58,"type":"spheres","material":{},"vertices":"0","colors":"1","radii":[[0.1000000014901161]],"centers":"2","ignoreExtent":false,"fastTransparency":true,"flags":32771},"60":{"id":60,"type":"text","material":{"lit":false,"margin":0,"floating":true,"edge":[0,1,1]},"vertices":"3","colors":"4","texts":[["Sepal Length"]],"cex":[[1]],"adj":[[0.5,0.5,0.5]],"centers":"5","family":[["sans"]],"font":[[1]],"ignoreExtent":true,"flags":33808},"61":{"id":61,"type":"text","material":{"lit":false,"margin":1,"floating":true,"edge":[1,1,1]},"vertices":"6","colors":"7","texts":[["Sepal Width"]],"cex":[[1]],"adj":[[0.5,0.5,0.5]],"centers":"8","family":[["sans"]],"font":[[1]],"ignoreExtent":true,"flags":33808},"62":{"id":62,"type":"text","material":{"lit":false,"margin":2,"floating":true,"edge":[1,1,1]},"vertices":"9","colors":"10","texts":[["Petal Length"]],"cex":[[1]],"adj":[[0.5,0.5,0.5]],"centers":"11","family":[["sans"]],"font":[[1]],"ignoreExtent":true,"flags":33808},"45":{"id":45,"type":"light","vertices":[[0,0,1]],"colors":[[1,1,1,1],[1,1,1,1],[1,1,1,1]],"viewpoint":true,"finite":false},"46":{"id":46,"type":"background","material":{"lit":false,"back":"lines"},"colors":"12","centers":"13","sphere":false,"fogtype":"none","fogscale":1,"flags":32768},"59":{"id":59,"type":"bboxdeco","material":{"front":"lines","back":"lines"},"vertices":"14","colors":"15","axes":{"mode":["pretty","pretty","pretty"],"step":[1,0.5,1],"nticks":[5,5,5],"marklen":[15,15,15],"expand":[1.029999971389771,1.029999971389771,1.029999971389771]},"draw_front":true,"flags":32769},"41":{"id":41,"type":"subscene","par3d":{"antialias":8,"FOV":30,"ignoreExtent":false,"listeners":41,"mouseMode":{"none":"none","left":"trackball","right":"zoom","middle":"fov","wheel":"pull"},"observer":[0,0,18.75103759765625],"modelMatrix":[[1.173371434211731,0,0,-7.157566070556641],[0,0.6019749641418457,0.6727780103683472,-4.583793640136719],[0,-1.653912544250488,0.2448711842298508,-14.42575836181641],[0,0,0,1]],"projMatrix":[[3.732050657272339,0,0,0],[0,3.732050657272339,0,0],[0,0,-3.863703012466431,-67.59531402587891],[0,0,-1,0]],"skipRedraw":false,"userMatrix":[[1,0,0,0],[0,0.3420201433256682,0.9396926207859085,0],[0,-0.9396926207859085,0.3420201433256682,0],[0,0,0,1]],"userProjection":[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],"scale":[1.173371434211731,1.760056972503662,0.7159554362297058],"viewport":{"x":0,"y":0,"width":1,"height":1},"zoom":1,"bbox":[4.214775562286377,7.985224723815918,1.943183660507202,4.456816673278809,0.8603265285491943,7.039673805236816],"windowRect":[60,83,316,339],"family":"sans","font":1,"cex":1,"useFreeType":false,"fontname":"TT Arial","maxClipPlanes":8,"glVersion":4.6,"activeSubscene":0},"embeddings":{"viewport":"replace","projection":"replace","model":"replace","mouse":"replace"},"objects":[46,59,58,60,61,62,45],"subscenes":[],"flags":34067}},"crosstalk":{"key":[],"group":[],"id":[],"options":[]},"width":520,"height":520,"buffer":{"accessors":[{"bufferView":0,"componentType":5126,"count":150,"type":"VEC3"},{"bufferView":1,"componentType":5121,"count":150,"type":"VEC4","normalized":true},{"bufferView":2,"componentType":5126,"count":150,"type":"VEC3"},{"bufferView":3,"componentType":5126,"count":1,"type":"VEC3"},{"bufferView":4,"componentType":5121,"count":1,"type":"VEC4"},{"bufferView":5,"componentType":5126,"count":1,"type":"VEC3"},{"bufferView":6,"componentType":5126,"count":1,"type":"VEC3"},{"bufferView":7,"componentType":5121,"count":1,"type":"VEC4"},{"bufferView":8,"componentType":5126,"count":1,"type":"VEC3"},{"bufferView":9,"componentType":5126,"count":1,"type":"VEC3"},{"bufferView":10,"componentType":5121,"count":1,"type":"VEC4"},{"bufferView":11,"componentType":5126,"count":1,"type":"VEC3"},{"bufferView":12,"componentType":5121,"count":1,"type":"VEC4"},{"bufferView":13,"componentType":5121,"count":1,"type":"VEC3"},{"bufferView":14,"componentType":5126,"count":15,"type":"VEC3"},{"bufferView":15,"componentType":5121,"count":1,"type":"VEC4"}],"bufferViews":[{"buffer":0,"byteLength":1800,"byteOffset":0},{"buffer":0,"byteLength":600,"byteOffset":1800},{"buffer":0,"byteLength":1800,"byteOffset":2400},{"buffer":0,"byteLength":12,"byteOffset":4200},{"buffer":0,"byteLength":4,"byteOffset":4212},{"buffer":0,"byteLength":12,"byteOffset":4216},{"buffer":0,"byteLength":12,"byteOffset":4228},{"buffer":0,"byteLength":4,"byteOffset":4240},{"buffer":0,"byteLength":12,"byteOffset":4244},{"buffer":0,"byteLength":12,"byteOffset":4256},{"buffer":0,"byteLength":4,"byteOffset":4268},{"buffer":0,"byteLength":12,"byteOffset":4272},{"buffer":0,"byteLength":4,"byteOffset":4284},{"buffer":0,"byteLength":3,"byteOffset":4288},{"buffer":0,"byteLength":180,"byteOffset":4292},{"buffer":0,"byteLength":4,"byteOffset":4472}],"buffers":[{"byteLength":4476,"bytes":"MzOjQAAAYEAzM7M/zcycQAAAQEAzM7M/ZmaWQM3MTEBmZqY/MzOTQGZmRkAAAMA/AACgQGZm\nZkAzM7M/zcysQJqZeUCamdk/MzOTQJqZWUAzM7M/AACgQJqZWUAAAMA/zcyMQJqZOUAzM7M/\nzcycQGZmRkAAAMA/zcysQM3MbEAAAMA/mpmZQJqZWUDNzMw/mpmZQAAAQEAzM7M/mpmJQAAA\nQEDNzIw/mpm5QAAAgECamZk/Zma2QM3MjEAAAMA/zcysQJqZeUBmZqY/MzOjQAAAYEAzM7M/\nZma2QDMzc0Camdk/MzOjQDMzc0AAAMA/zcysQJqZWUCamdk/MzOjQM3MbEAAAMA/MzOTQGZm\nZkAAAIA/MzOjQDMzU0Camdk/mpmZQJqZWUAzM/M/AACgQAAAQEDNzMw/AACgQJqZWUDNzMw/\nZmamQAAAYEAAAMA/ZmamQJqZWUAzM7M/ZmaWQM3MTEDNzMw/mpmZQGZmRkDNzMw/zcysQJqZ\nWUAAAMA/ZmamQDMzg0AAAMA/AACwQGZmhkAzM7M/zcycQGZmRkAAAMA/AACgQM3MTECamZk/\nAACwQAAAYEBmZqY/zcycQGZmZkAzM7M/zcyMQAAAQEBmZqY/MzOjQJqZWUAAAMA/AACgQAAA\nYEBmZqY/AACQQDMzE0BmZqY/zcyMQM3MTEBmZqY/AACgQAAAYEDNzMw/MzOjQDMzc0AzM/M/\nmpmZQAAAQEAzM7M/MzOjQDMzc0DNzMw/MzOTQM3MTEAzM7M/mpmpQM3MbEAAAMA/AACgQDMz\nU0AzM7M/AADgQM3MTEBmZpZAzczMQM3MTEAAAJBAzczcQGZmRkDNzJxAAACwQDMzE0AAAIBA\nAADQQDMzM0AzM5NAZma2QDMzM0AAAJBAmpnJQDMzU0BmZpZAzcycQJqZGUAzM1NAMzPTQJqZ\nOUAzM5NAZmamQM3MLECamXlAAACgQAAAAEAAAGBAzcy8QAAAQEBmZoZAAADAQM3MDEAAAIBA\nMzPDQJqZOUBmZpZAMzOzQJqZOUBmZmZAZmbWQGZmRkDNzIxAMzOzQAAAQEAAAJBAmpm5QM3M\nLEAzM4NAZmbGQM3MDEAAAJBAMzOzQAAAIECamXlAzcy8QM3MTECamZlAMzPDQDMzM0AAAIBA\nmpnJQAAAIEDNzJxAMzPDQDMzM0BmZpZAzczMQJqZOUCamYlAMzPTQAAAQEDNzIxAmpnZQDMz\nM0CamZlAZmbWQAAAQEAAAKBAAADAQJqZOUAAAJBAZma2QGZmJkAAAGBAAACwQJqZGUAzM3NA\nAACwQJqZGUDNzGxAmpm5QM3MLECamXlAAADAQM3MLEAzM6NAzcysQAAAQEAAAJBAAADAQJqZ\nWUAAAJBAZmbWQGZmRkBmZpZAmpnJQDMzE0DNzIxAMzOzQAAAQEAzM4NAAACwQAAAIEAAAIBA\nAACwQGZmJkDNzIxAMzPDQAAAQEAzM5NAmpm5QGZmJkAAAIBAAACgQDMzE0AzM1NAMzOzQM3M\nLEBmZoZAZma2QAAAQEBmZoZAZma2QJqZOUBmZoZAZmbGQJqZOUCamYlAMzOjQAAAIEAAAEBA\nZma2QDMzM0AzM4NAmpnJQDMzU0AAAMBAmpm5QM3MLEAzM6NAMzPjQAAAQEDNzLxAmpnJQJqZ\nOUAzM7NAAADQQAAAQECamblAMzPzQAAAQEAzM9NAzcycQAAAIEAAAJBAmpnpQJqZOUCamclA\nZmbWQAAAIECamblAZmbmQGZmZkAzM8NAAADQQM3MTEAzM6NAzczMQM3MLECamalAmpnZQAAA\nQEAAALBAZma2QAAAIEAAAKBAmpm5QDMzM0AzM6NAzczMQM3MTECamalAAADQQAAAQEAAALBA\nZmb2QDMzc0BmZtZAZmb2QGZmJkDNzNxAAADAQM3MDEAAAKBAzczcQM3MTEBmZrZAMzOzQDMz\nM0DNzJxAZmb2QDMzM0BmZtZAmpnJQM3MLEDNzJxAZmbWQDMzU0BmZrZAZmbmQM3MTEAAAMBA\nZmbGQDMzM0CamZlAMzPDQAAAQEDNzJxAzczMQDMzM0AzM7NAZmbmQAAAQECamblAzczsQDMz\nM0AzM8NAzcz8QDMzc0DNzMxAzczMQDMzM0AzM7NAmpnJQDMzM0AzM6NAMzPDQGZmJkAzM7NA\nZmb2QAAAQEAzM8NAmpnJQJqZWUAzM7NAzczMQGZmRkAAALBAAADAQAAAQECamZlAzczcQGZm\nRkDNzKxAZmbWQGZmRkAzM7NAzczcQGZmRkAzM6NAmpm5QM3MLEAzM6NAmpnZQM3MTEDNzLxA\nZmbWQDMzU0BmZrZAZmbWQAAAQEBmZqZAmpnJQAAAIEAAAKBAAADQQAAAQEBmZqZAZmbGQJqZ\nWUDNzKxAzcy8QAAAQEAzM6NASHb//0h2//9Idv//SHb//0h2//9Idv//SHb//0h2//9Idv//\nSHb//0h2//9Idv//SHb//0h2//9Idv//SHb//0h2//9Idv//SHb//0h2//9Idv//SHb//0h2\n//9Idv//SHb//0h2//9Idv//SHb//0h2//9Idv//SHb//0h2//9Idv//SHb//0h2//9Idv//\nSHb//0h2//9Idv//SHb//0h2//9Idv//SHb//0h2//9Idv//SHb//0h2//9Idv//SHb//0h2\n//8Ai4v/AIuL/wCLi/8Ai4v/AIuL/wCLi/8Ai4v/AIuL/wCLi/8Ai4v/AIuL/wCLi/8Ai4v/\nAIuL/wCLi/8Ai4v/AIuL/wCLi/8Ai4v/AIuL/wCLi/8Ai4v/AIuL/wCLi/8Ai4v/AIuL/wCL\ni/8Ai4v/AIuL/wCLi/8Ai4v/AIuL/wCLi/8Ai4v/AIuL/wCLi/8Ai4v/AIuL/wCLi/8Ai4v/\nAIuL/wCLi/8Ai4v/AIuL/wCLi/8Ai4v/AIuL/wCLi/8Ai4v/AIuL//315v/99eb//fXm//31\n5v/99eb//fXm//315v/99eb//fXm//315v/99eb//fXm//315v/99eb//fXm//315v/99eb/\n/fXm//315v/99eb//fXm//315v/99eb//fXm//315v/99eb//fXm//315v/99eb//fXm//31\n5v/99eb//fXm//315v/99eb//fXm//315v/99eb//fXm//315v/99eb//fXm//315v/99eb/\n/fXm//315v/99eb//fXm//315v/99eb/MzOjQAAAYEAzM7M/zcycQAAAQEAzM7M/ZmaWQM3M\nTEBmZqY/MzOTQGZmRkAAAMA/AACgQGZmZkAzM7M/zcysQJqZeUCamdk/MzOTQJqZWUAzM7M/\nAACgQJqZWUAAAMA/zcyMQJqZOUAzM7M/zcycQGZmRkAAAMA/zcysQM3MbEAAAMA/mpmZQJqZ\nWUDNzMw/mpmZQAAAQEAzM7M/mpmJQAAAQEDNzIw/mpm5QAAAgECamZk/Zma2QM3MjEAAAMA/\nzcysQJqZeUBmZqY/MzOjQAAAYEAzM7M/Zma2QDMzc0Camdk/MzOjQDMzc0AAAMA/zcysQJqZ\nWUCamdk/MzOjQM3MbEAAAMA/MzOTQGZmZkAAAIA/MzOjQDMzU0Camdk/mpmZQJqZWUAzM/M/\nAACgQAAAQEDNzMw/AACgQJqZWUDNzMw/ZmamQAAAYEAAAMA/ZmamQJqZWUAzM7M/ZmaWQM3M\nTEDNzMw/mpmZQGZmRkDNzMw/zcysQJqZWUAAAMA/ZmamQDMzg0AAAMA/AACwQGZmhkAzM7M/\nzcycQGZmRkAAAMA/AACgQM3MTECamZk/AACwQAAAYEBmZqY/zcycQGZmZkAzM7M/zcyMQAAA\nQEBmZqY/MzOjQJqZWUAAAMA/AACgQAAAYEBmZqY/AACQQDMzE0BmZqY/zcyMQM3MTEBmZqY/\nAACgQAAAYEDNzMw/MzOjQDMzc0AzM/M/mpmZQAAAQEAzM7M/MzOjQDMzc0DNzMw/MzOTQM3M\nTEAzM7M/mpmpQM3MbEAAAMA/AACgQDMzU0AzM7M/AADgQM3MTEBmZpZAzczMQM3MTEAAAJBA\nzczcQGZmRkDNzJxAAACwQDMzE0AAAIBAAADQQDMzM0AzM5NAZma2QDMzM0AAAJBAmpnJQDMz\nU0BmZpZAzcycQJqZGUAzM1NAMzPTQJqZOUAzM5NAZmamQM3MLECamXlAAACgQAAAAEAAAGBA\nzcy8QAAAQEBmZoZAAADAQM3MDEAAAIBAMzPDQJqZOUBmZpZAMzOzQJqZOUBmZmZAZmbWQGZm\nRkDNzIxAMzOzQAAAQEAAAJBAmpm5QM3MLEAzM4NAZmbGQM3MDEAAAJBAMzOzQAAAIECamXlA\nzcy8QM3MTECamZlAMzPDQDMzM0AAAIBAmpnJQAAAIEDNzJxAMzPDQDMzM0BmZpZAzczMQJqZ\nOUCamYlAMzPTQAAAQEDNzIxAmpnZQDMzM0CamZlAZmbWQAAAQEAAAKBAAADAQJqZOUAAAJBA\nZma2QGZmJkAAAGBAAACwQJqZGUAzM3NAAACwQJqZGUDNzGxAmpm5QM3MLECamXlAAADAQM3M\nLEAzM6NAzcysQAAAQEAAAJBAAADAQJqZWUAAAJBAZmbWQGZmRkBmZpZAmpnJQDMzE0DNzIxA\nMzOzQAAAQEAzM4NAAACwQAAAIEAAAIBAAACwQGZmJkDNzIxAMzPDQAAAQEAzM5NAmpm5QGZm\nJkAAAIBAAACgQDMzE0AzM1NAMzOzQM3MLEBmZoZAZma2QAAAQEBmZoZAZma2QJqZOUBmZoZA\nZmbGQJqZOUCamYlAMzOjQAAAIEAAAEBAZma2QDMzM0AzM4NAmpnJQDMzU0AAAMBAmpm5QM3M\nLEAzM6NAMzPjQAAAQEDNzLxAmpnJQJqZOUAzM7NAAADQQAAAQECamblAMzPzQAAAQEAzM9NA\nzcycQAAAIEAAAJBAmpnpQJqZOUCamclAZmbWQAAAIECamblAZmbmQGZmZkAzM8NAAADQQM3M\nTEAzM6NAzczMQM3MLECamalAmpnZQAAAQEAAALBAZma2QAAAIEAAAKBAmpm5QDMzM0AzM6NA\nzczMQM3MTECamalAAADQQAAAQEAAALBAZmb2QDMzc0BmZtZAZmb2QGZmJkDNzNxAAADAQM3M\nDEAAAKBAzczcQM3MTEBmZrZAMzOzQDMzM0DNzJxAZmb2QDMzM0BmZtZAmpnJQM3MLEDNzJxA\nZmbWQDMzU0BmZrZAZmbmQM3MTEAAAMBAZmbGQDMzM0CamZlAMzPDQAAAQEDNzJxAzczMQDMz\nM0AzM7NAZmbmQAAAQECamblAzczsQDMzM0AzM8NAzcz8QDMzc0DNzMxAzczMQDMzM0AzM7NA\nmpnJQDMzM0AzM6NAMzPDQGZmJkAzM7NAZmb2QAAAQEAzM8NAmpnJQJqZWUAzM7NAzczMQGZm\nRkAAALBAAADAQAAAQECamZlAzczcQGZmRkDNzKxAZmbWQGZmRkAzM7NAzczcQGZmRkAzM6NA\nmpm5QM3MLEAzM6NAmpnZQM3MTEDNzLxAZmbWQDMzU0BmZrZAZmbWQAAAQEBmZqZAmpnJQAAA\nIEAAAKBAAADQQAAAQEBmZqZAZmbGQJqZWUDNzKxAzcy8QAAAQEAzM6NAAADAfwAAgEAAAIA/\nAAAAAQAAwH8AAIBAAACAPwAAwH8AAIBAAACAPwAAAAEAAMB/AACAQAAAgD8AAMB/AACAQAAA\ngD8AAAABAADAfwAAgEAAAIA/AQEBAQAAAAAAAKBAAADAfwAAwH8AAMBAAADAfwAAwH8AAOBA\nAADAfwAAwH8AAMB/AAAAQAAAwH8AAMB/AAAgQAAAwH8AAMB/AABAQAAAwH8AAMB/AABgQAAA\nwH8AAMB/AACAQAAAwH8AAMB/AADAfwAAgD8AAMB/AADAfwAAAEAAAMB/AADAfwAAQEAAAMB/\nAADAfwAAgEAAAMB/AADAfwAAoEAAAMB/AADAfwAAwEAAAMB/AADAfwAA4EAAAAAB"}]},"context":{"shiny":false,"rmarkdown":null},"vertexShader":"#line 2 1\n// File 1 is the vertex shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\n\nattribute vec3 aPos;\nattribute vec4 aCol;\nuniform mat4 mvMatrix;\nuniform mat4 prMatrix;\nvarying vec4 vCol;\nvarying vec4 vPosition;\n\n#ifdef NEEDS_VNORMAL\nattribute vec3 aNorm;\nuniform mat4 normMatrix;\nvarying vec4 vNormal;\n#endif\n\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nattribute vec2 aTexcoord;\nvarying vec2 vTexcoord;\n#endif\n\n#ifdef FIXED_SIZE\nuniform vec3 textScale;\n#endif\n\n#ifdef FIXED_QUADS\nattribute vec3 aOfs;\n#endif\n\n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\nvarying float normz;\nuniform mat4 invPrMatrix;\n#else\nattribute vec3 aPos1;\nattribute vec3 aPos2;\nvarying float normz;\n#endif\n#endif // IS_TWOSIDED\n\n#ifdef FAT_LINES\nattribute vec3 aNext;\nattribute vec2 aPoint;\nvarying vec2 vPoint;\nvarying float vLength;\nuniform float uAspect;\nuniform float uLwd;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  \n#ifndef IS_BRUSH\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG) || defined(USE_ENVMAP)\n  vPosition = mvMatrix * vec4(aPos, 1.);\n#endif\n  \n#ifndef FIXED_QUADS\n  gl_Position = prMatrix * vPosition;\n#endif\n#endif // !IS_BRUSH\n  \n#ifdef IS_POINTS\n  gl_PointSize = POINTSIZE;\n#endif\n  \n  vCol = aCol;\n  \n// USE_ENVMAP implies NEEDS_VNORMAL\n\n#ifdef NEEDS_VNORMAL\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\n#endif\n\n#ifdef USE_ENVMAP\n  vReflection = normalize(reflect(vPosition.xyz/vPosition.w, \n                        normalize(vNormal.xyz/vNormal.w)));\n#endif\n  \n#ifdef IS_TWOSIDED\n#ifdef HAS_NORMALS\n  /* normz should be calculated *after* projection */\n  normz = (invPrMatrix*vNormal).z;\n#else\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\n#endif\n#endif // IS_TWOSIDED\n  \n#ifdef NEEDS_VNORMAL\n  vNormal = vec4(normalize(vNormal.xyz), 1);\n#endif\n  \n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\n  vTexcoord = aTexcoord;\n#endif\n  \n#if defined(FIXED_SIZE) && !defined(ROTATING)\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w;\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\n#endif\n  \n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\n  pos = pos/pos.w + vec4(aOfs,  0.);\n  gl_Position = prMatrix*pos;\n#endif\n  \n#ifdef FAT_LINES\n  /* This code was inspired by Matt Deslauriers' code in \n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\n  vec2 aspectVec = vec2(uAspect, 1.0);\n  mat4 projViewModel = prMatrix * mvMatrix;\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\n  currentProjected = currentProjected/currentProjected.w;\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\n  vec2 currentScreen = currentProjected.xy * aspectVec;\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\n  float len = uLwd;\n  vec2 dir = vec2(1.0, 0.0);\n  vPoint = aPoint;\n  vLength = length(nextScreen - currentScreen)/2.0;\n  vLength = vLength/(vLength + len);\n  if (vLength > 0.0) {\n    dir = normalize(nextScreen - currentScreen);\n  }\n  vec2 normal = vec2(-dir.y, dir.x);\n  dir.x /= uAspect;\n  normal.x /= uAspect;\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\n  gl_Position = currentProjected + offset;\n#endif\n  \n#ifdef IS_BRUSH\n  gl_Position = vec4(aPos, 1.);\n#endif\n}","fragmentShader":"#line 2 2\n// File 2 is the fragment shader\n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#endif\nvarying vec4 vCol; // carries alpha\nvarying vec4 vPosition;\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\nvarying vec2 vTexcoord;\nuniform sampler2D uSampler;\n#endif\n\n#ifdef HAS_FOG\nuniform int uFogMode;\nuniform vec3 uFogColor;\nuniform vec4 uFogParms;\n#endif\n\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\nvarying vec4 vNormal;\n#endif\n\n#if NCLIPPLANES > 0\nuniform vec4 vClipplane[NCLIPPLANES];\n#endif\n\n#if NLIGHTS > 0\nuniform mat4 mvMatrix;\n#endif\n\n#ifdef IS_LIT\nuniform vec3 emission;\nuniform float shininess;\n#if NLIGHTS > 0\nuniform vec3 ambient[NLIGHTS];\nuniform vec3 specular[NLIGHTS]; // light*material\nuniform vec3 diffuse[NLIGHTS];\nuniform vec3 lightDir[NLIGHTS];\nuniform bool viewpoint[NLIGHTS];\nuniform bool finite[NLIGHTS];\n#endif\n#endif // IS_LIT\n\n#ifdef IS_TWOSIDED\nuniform bool front;\nvarying float normz;\n#endif\n\n#ifdef FAT_LINES\nvarying vec2 vPoint;\nvarying float vLength;\n#endif\n\n#ifdef USE_ENVMAP\nvarying vec3 vReflection;\n#endif\n\nvoid main(void) {\n  vec4 fragColor;\n#ifdef FAT_LINES\n  vec2 point = vPoint;\n  bool neg = point.y < 0.0;\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\n                 -(point.y - vLength)/(1.0 - vLength);\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\n  if (neg && length(point) <= 1.0) discard;\n#endif\n  point.y = min(point.y, 0.0);\n  if (length(point) > 1.0) discard;\n#endif // FAT_LINES\n  \n#ifdef ROUND_POINTS\n  vec2 coord = gl_PointCoord - vec2(0.5);\n  if (length(coord) > 0.5) discard;\n#endif\n  \n#if NCLIPPLANES > 0\n  for (int i = 0; i < NCLIPPLANES; i++)\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\n#endif\n    \n#ifdef FIXED_QUADS\n    vec3 n = vec3(0., 0., 1.);\n#elif defined(IS_LIT)\n    vec3 n = normalize(vNormal.xyz);\n#endif\n    \n#ifdef IS_TWOSIDED\n    if ((normz <= 0.) != front) discard;\n#endif\n\n#ifdef IS_LIT\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\n    vec3 lightdir;\n    vec4 colDiff;\n    vec3 halfVec;\n    vec4 lighteffect = vec4(emission, 0.);\n    vec3 col;\n    float nDotL;\n#ifdef FIXED_QUADS\n    n = -faceforward(n, n, eye);\n#endif\n    \n#if NLIGHTS > 0\n    // Simulate two-sided lighting\n    if (n.z < 0.0)\n      n = -n;\n    for (int i=0;i<NLIGHTS;i++) {\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\n      lightdir = lightDir[i];\n      if (!viewpoint[i]) {\n        if (finite[i]) {\n          lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\n        } else {\n          lightdir = (mvMatrix * vec4(lightdir, 0.)).xyz;\n        }\n      }\n      if (!finite[i]) {\n        halfVec = normalize(lightdir + eye);\n      } else {\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\n        halfVec = normalize(lightdir + eye);\n      }\n      col = ambient[i];\n      nDotL = dot(n, lightdir);\n      col = col + max(nDotL, 0.) * colDiff.rgb;\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\n      lighteffect = lighteffect + vec4(col, colDiff.a);\n    }\n#endif\n    \n#else // not IS_LIT\n    vec4 colDiff = vCol;\n    vec4 lighteffect = colDiff;\n#endif\n    \n#ifdef IS_TEXT\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\n#endif\n    \n#ifdef HAS_TEXTURE\n\n// These calculations use the definitions from \n// https://docs.gl/gl3/glTexEnv\n\n#ifdef USE_ENVMAP\n    float m = 2.0 * sqrt(dot(vReflection, vReflection) + 2.0*vReflection.z + 1.0);\n    vec4 textureColor = texture2D(uSampler, vReflection.xy / m + vec2(0.5, 0.5));\n#else\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\n#endif\n\n#ifdef TEXTURE_rgb\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(textureColor.rgb, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*vec4(textureColor.rgb, 1.);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb, lighteffect.a);\n#endif\n\n#endif //TEXTURE_rgb\n        \n#ifdef TEXTURE_rgba\n\n#ifdef TEXMODE_replace\n// already done\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = lighteffect*textureColor;\n#endif\n\n#ifdef TEXMODE_decal\n    textureColor = vec4((1. - textureColor.a)*lighteffect.rgb) +\n                     textureColor.a*textureColor.rgb, \n                     lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb,\n                    lighteffect.a*textureColor.a);\n#endif\n    \n#endif //TEXTURE_rgba\n    \n#ifdef TEXTURE_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(lighteffect.rgb, luminance);\n#endif \n\n#if defined(TEXMODE_modulate) || defined(TEXMODE_blend) || defined(TEXMODE_add)\n    textureColor = vec4(lighteffect.rgb, lighteffect.a*luminance);\n#endif\n \n#endif // TEXTURE_alpha\n    \n// The TEXTURE_luminance values are not from that reference    \n#ifdef TEXTURE_luminance\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, lighteffect.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, lighteffect.a);\n#endif\n\n#endif // TEXTURE_luminance\n \n    \n#ifdef TEXTURE_luminance_alpha\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\n\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\n    textureColor = vec4(luminance, luminance, luminance, textureColor.a);\n#endif \n\n#ifdef TEXMODE_modulate\n    textureColor = vec4(luminance*lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_blend\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\n                        textureColor.a*lighteffect.a);\n#endif\n\n#ifdef TEXMODE_add\n    textureColor = vec4(luminance + lighteffect.rgb, \n                        textureColor.a*lighteffect.a);\n\n#endif\n\n#endif // TEXTURE_luminance_alpha\n    \n    fragColor = textureColor;\n\n#elif defined(IS_TEXT)\n    if (textureColor.a < 0.1)\n      discard;\n    else\n      fragColor = textureColor;\n#else\n    fragColor = lighteffect;\n#endif // HAS_TEXTURE\n    \n#ifdef HAS_FOG\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\n    // In Exp and Exp2: use density = density/far\n    // fogF will be the proportion of fog\n    // Initialize it to the linear value\n    float fogF;\n    if (uFogMode > 0) {\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\n      if (uFogMode > 1)\n        fogF = mix(uFogParms.w, 1.0, fogF);\n      fogF = fogF*uFogParms.z;\n      if (uFogMode == 2)\n        fogF = 1.0 - exp(-fogF);\n      // Docs are wrong: use (density*c)^2, not density*c^2\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\n      else if (uFogMode == 3)\n        fogF = 1.0 - exp(-fogF*fogF);\n      fogF = clamp(fogF, 0.0, 1.0);\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\n    } else gl_FragColor = fragColor;\n#else\n    gl_FragColor = fragColor;\n#endif // HAS_FOG\n    \n}","players":[],"webGLoptions":{"preserveDrawingBuffer":true}},"evals":[],"jsHooks":[]}</script>
<script type="application/htmlwidget-sizing" data-for="rgl68864">{"viewer":{"width":520,"height":520,"padding":15,"fill":false},"browser":{"width":520,"height":520,"fill":false}}</script>